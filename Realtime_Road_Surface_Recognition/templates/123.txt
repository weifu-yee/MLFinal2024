
    // 開始擷取並送 frame
    video.addEventListener('play', () => {
      if (!ctx || canvas.height===0) {
        log('canvas 尚未初始化，跳過擷取');
        return;
      }

      log('開始擷取並送出 Base64');
      setInterval(() => {
        // 繪製縮圖
        ctx.drawImage(
          video,
          0,0, video.videoWidth, video.videoHeight,
          0,0, canvas.width, canvas.height
        );
        // 轉成 Base64
        const dataUrl = canvas.toDataURL('image/jpeg', 0.8);
        log('sending Base64 to /predict');
        // 包成 JSON 傳送
        fetch(BASE + '/predict', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ image: dataUrl })
        })
        .then(r => {
          log(`predict 回應: ${r.status}`);
          return r.json();
        })
        .then(d => {
          log(`收到結果 base64 長度: ${d.image.length}`);
          output.src = 'data:image/jpeg;base64,' + d.image;
          classesDiv.textContent = 'Classes: ' + (d.classes || []).join(', ');
        })
        .catch(e => log('fetch error: '+e.message));
      }, 1000 / FRAME_RATE);
    });